BEGIN;

DROP TABLE IF EXISTS IssuePosts;
DROP TABLE IF EXISTS IssueTags;
DROP TABLE IF EXISTS Issues;
DROP TABLE IF EXISTS Projects;
DROP TABLE IF EXISTS Users;

CREATE TABLE IF NOT EXISTS Users (
    ID SERIAL PRIMARY KEY,
    Username VARCHAR(64) NOT NULL UNIQUE,
    FullName VARCHAR(100) NOT NULL,
    IsAdministrator BOOLEAN DEFAULT FALSE,
    PasswordHash CHAR(128) NOT NULL,
    PasswordSalt INT NOT NULL
);
CREATE TABLE IF NOT EXISTS Projects (
    ID SERIAL PRIMARY KEY,
    ProjectName VARCHAR(100) NOT NULL,
    ShortProjectID VARCHAR(3) NOT NULL UNIQUE,
    AuthorID INT NOT NULL,
    FOREIGN KEY (AuthorID) REFERENCES Users(ID)  
);
CREATE TABLE IF NOT EXISTS Issues (
    ID SERIAL PRIMARY KEY,
    IssueName VARCHAR(100) NOT NULL,
    ProjectID INT NOT NULL,
    FOREIGN KEY (ProjectID) REFERENCES Projects(ID),
    IsClosed BOOLEAN DEFAULT FALSE,
    AssigneeID INT,
    FOREIGN KEY (AssigneeID) REFERENCES Users(ID)
);
CREATE TABLE IF NOT EXISTS IssuePosts (
    ID SERIAL PRIMARY KEY,
    AuthorID INT NOT NULL,
    IssueID INT NOT NULL,
    FOREIGN KEY (AuthorID) REFERENCES Users(ID),
    FOREIGN KEY (IssueID) REFERENCES Issues(ID),
    ContainedText TEXT NOT NULL,
    DateOfCreation TIMESTAMP NOT NULL,
    DateOfEdit TIMESTAMP
);
CREATE TABLE IF NOT EXISTS IssueTags (
    ID SERIAL PRIMARY KEY,
    IssueID INT NOT NULL,
    FOREIGN KEY (IssueID) REFERENCES Issues(ID),
    TagText VARCHAR(64) NOT NULL
);

COMMIT;